import java.text.SimpleDateFormat

apply plugin: 'com.android.library'

android {

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode createVersionCode()
        versionName "$project.version"
    }
}

repositories{
    google()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // firebase
    implementation 'com.google.firebase:firebase-auth:19.4.0'
    implementation 'com.google.firebase:firebase-database:19.4.0'
    implementation "com.google.firebase:firebase-storage:19.2.0"
    implementation "com.google.firebase:firebase-firestore:21.6.0"
    implementation "com.google.firebase:firebase-functions:19.1.0"
    implementation "com.google.firebase:firebase-config:19.2.0"

    // rx
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    testImplementation 'com.google.firebase:firebase-auth:19.4.0'
    testImplementation 'com.google.firebase:firebase-database:19.4.0'
    testImplementation "com.google.firebase:firebase-storage:19.2.0"
    testImplementation "com.google.firebase:firebase-firestore:21.6.0"
    testImplementation "com.google.firebase:firebase-functions:19.1.0"
    testImplementation "com.google.firebase:firebase-config:19.2.0"
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:3.3.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test:core:1.3.0'
}

def createVersionCode(){
    def df = new SimpleDateFormat("yyMMddHHmm")
    df.setTimeZone(TimeZone.getTimeZone("de_CH"))
    def versionCode = df.format(new Date()).toInteger()
    println "#### createVersionCode: " + versionCode + " ####"

    return versionCode
}